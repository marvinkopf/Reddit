@model Tuple<Comment, bool>

@{
    if (Model.Item1 == null || Model.Item1.Txt == null)
    {
        return;
    }

    string backgroundcolor = "";

    if(Model.Item2)
    {
        backgroundcolor = "rgb(247, 247, 248)";
    }
    else
    {
        backgroundcolor = "white";
    }

    var timePassed = TimePassedAsString(Model.Item1.Created);
}

<a href="/user/@Model.Item1.Creator.Id" class='author'>@Model.Item1.Creator.Email</a>
<span class='score'><b>@Model.Item1.Score Points</b></span>
<span class="date">@timePassed</span><br>
<span style="white-space: pre-line">@Model.Item1.Txt</span>


@foreach (var childComment in @Model.Item1.Children)
{<div class="comment" style="margin-left: 15px; background-color: @backgroundcolor;">
    @Html.Partial("_CommentPartial", Tuple.Create<Comment, bool>(childComment, !Model.Item2))</div>
}

@functions {
    string TimePassedAsString(DateTime time)
    {
        var difference = DateTime.Now.Subtract(time);

        if (difference.Days >= 30)
        {
            var countMonths = difference.Days / 30;
            return difference.Days / 30 + " months ago";
        }
        else if (difference.Days > 0)
            return difference.Days + " days ago";
        else if (difference.Hours > 0)
            return difference.Hours + " hours ago";
        else if (difference.Minutes > 0)
            return difference.Minutes + " minutes ago";

        return "<1min ago";
    }
}