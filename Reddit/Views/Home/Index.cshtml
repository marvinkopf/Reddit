@{ ViewData["Title"] = "Home Page"; }

@inject UserManager<ApplicationUser> userManager
@model Reddit.Models.HomeViewModels.IndexViewModel

<div class="links">
<ul>
    @{int i = 1;} @foreach (var post in Model.Posts) {
    <li>
        <div class="count">@i</div>
        <div class="post">
            <div class="upvote-btn">
                @{
                    if (post.UpvotedBy.FirstOrDefault(x => x.UserId == userManager.GetUserId(User)) != null) {
                        <span style="color:orange;" id="@post.PostId-upbtn" onclick="un_upvote_post(@post.PostId, @post.Score - 1)" class="upvote">
                        </span>
                        <div style="color:orange;" class="vote-score" id="@post.PostId-score" style="color:orange">@post.Score</div>

                        <span id="@post.PostId-downbtn" onclick="downvote_post(@post.PostId, @post.Score - 1)" class="downvote">
                        </span>
                    }
                    else if (post.DownvotedBy.FirstOrDefault(x => x.UserId == userManager.GetUserId(User)) != null) {
                        <span id="@post.PostId-upbtn" onclick="upvote_post(@post.PostId, @post.Score + 1)" class="upvote">
                        </span>
                        <div style="color:blue;" class="vote-score" id="@post.PostId-score" style="color:blue">@post.Score</div>

                        <span style="color:blue;" id="@post.PostId-downbtn" onclick="un_downvote_post(@post.PostId, @post.Score + 1)" class="downvote">
                        </span>
                    }
                    else {
                        @if (userManager.GetUserId(User) == null)
                        {
                            <a href="/Account/Login">
                                <span id="@post.PostId-upbtn" class="upvote">
                                </span>
                            </a>
                            <div class="vote-score" id="@post.PostId-score">@post.Score</div>

                            <a href="/Account/Login">
                                <span id="@post.PostId-downbtn" class="downvote">
                                </span>
                            </a>
                        }
                        else
                        {
                            <span id="@post.PostId-upbtn" onclick="upvote_post(@post.PostId, @post.Score)" class="upvote">
                            </span>
                            <div class="vote-score" id="@post.PostId-score">@post.Score</div>

                            <span id="@post.PostId-downbtn" onclick="downvote_post(@post.PostId, @post.Score)" class="downvote">
                            </span>
                        }
                    }
                }
            </div>
            <div class="image">
                <a href="//@post.Link">
                    @if (String.IsNullOrWhiteSpace(post.UrlToImage))
                    {
                        <img src="https://cdn2.iconfinder.com/data/icons/network-roundline/512/link-512.png" style="width:70px;height:70px;margin-left:10px;margin-bottom:10px;">
                    }
                    else
                    {
                        <img src="@post.UrlToImage" style="width:70px;height:70px;margin-left:10px;margin-bottom:10px;">
                    }
                </a>
            </div>
            <div class="content">
                <a class="post-title" href="//@post.Link">@post.Title</a><br>
                <div class="sub">
                    submitted @TimePassedAsString(@post.Created) by
                    @if (post.Creator != null)
                    {
                        <a class="creator" href=/user/@post.Creator.UserName>@post.Creator.UserName</a>
                    }
                    else
                    {
                        <text>[deleted]</text>
                    }
                     in <a class="creator" href='/r/@post.SubredditName'>r/@post.SubredditName</a>
                </div>
                <div class="sub-2">
                    <a href='/post/@post.PostId'>@post.Comments.Count() comments</a>
                </div>
            </div>
        </div>

    </li>
    i++;
    }
</ul>

@if (@Model.Posts.Any())
{
    <div>
        view more:
        <a href="/?after=@Model.Posts.Last().PostId">next</a>
    </div>
}
else
{
    <div>nothing here</div>
}

</div>

<div class="sidebar">
    <ul class="sidebar-links">
        <li>
            <a asp-controller="Home" asp-action="Submit" class="">Submit Link</a>
        </li>
        <li>
            <a asp-controller="Home" asp-action="CreateSub" class="">Create Subreddit</a>
        </li>
    </ul>

    <div style="text-align:center;">Popular subreddits</div>
    @{ var topsubs = Model.Subreddits.OrderByDescending(s => s.SubscribedUsers.Count()).Take(10); }
    <ul>
        @foreach (var sub in topsubs)
        {
            <li style="text-align:center;margin-top: 10px;">
                <a href="/r/@sub.Name">@sub.Name</a>
            </li>
        }
    </ul>
</div>

@functions {
    string TimePassedAsString(DateTime time)
    {
        var difference = DateTime.Now.Subtract(time);

        if (difference.Days >= 30)
        {
            var countMonths = difference.Days / 30;
            return difference.Days / 30 + " months ago";
        }
        else if (difference.Days > 0)
            return difference.Days + " days ago";
        else if (difference.Hours > 0)
            return difference.Hours + " hours ago";
        else if (difference.Minutes > 0)
            return difference.Minutes + " minutes ago";

        return "<1min ago";
    }
}
