@inject UserManager<ApplicationUser> userManager
@model Tuple<IEnumerable<Post>, Subreddit>

<div class="links">
<ul>
    @{int i = 1;} @foreach (var post in Model.Item1) {
    <li>
        <div class="count">@i</div>
        <div class="post">
            <div class="upvote-btn">
                @{
                    if (post.UpvotedBy.FirstOrDefault(x => x.UserId == userManager.GetUserId(User)) != null && post.UpvotedBy.FirstOrDefault(x => x.UserId == userManager.GetUserId(User)).Upvoted) {
                        <span style="color:orange;" id="@post.PostId-upbtn" onclick="un_upvote_post(@post.PostId, @post.Score - 1)" class="upvote">
                        </span>
                        <div style="color:orange;" class="vote-score" id="@post.PostId-score" style="color:orange">@post.Score</div>

                        <span id="@post.PostId-downbtn" onclick="downvote_post(@post.PostId, @post.Score - 1)" class="downvote">
                        </span>
                    }
                    else if (post.DownvotedBy.FirstOrDefault(x => x.UserId == userManager.GetUserId(User)) != null && post.DownvotedBy.FirstOrDefault(x => x.UserId == userManager.GetUserId(User)).Downvoted) {
                        <span id="@post.PostId-upbtn" onclick="upvote_post(@post.PostId, @post.Score + 1)" class="upvote">
                        </span>
                        <div style="color:blue;" class="vote-score" id="@post.PostId-score" style="color:blue">@post.Score</div>

                        <span style="color:blue;" id="@post.PostId-downbtn" onclick="un_downvote_post(@post.PostId, @post.Score + 1)" class="downvote">
                        </span>
                    }
                    else {
                        @if (userManager.GetUserId(User) == null)
                        {
                            <a href="/Account/Login">
                                <span id="@post.PostId-upbtn" class="upvote">
                                </span>
                            </a>
                            <div class="vote-score" id="@post.PostId-score">@post.Score</div>

                            <a href="/Account/Login">
                                <span id="@post.PostId-downbtn" class="downvote">
                                </span>
                            </a>
                        }
                        else
                        {
                            <span id="@post.PostId-upbtn" onclick="upvote_post(@post.PostId, @post.Score)" class="upvote">
                            </span>
                            <div class="vote-score" id="@post.PostId-score">@post.Score</div>

                            <span id="@post.PostId-downbtn" onclick="downvote_post(@post.PostId, @post.Score)" class="downvote">
                            </span>
                        }
                    }
                }
            </div>
            <div class="content">
                <a class=\ "post-title\" href=//@post.Link>@post.Title</a><br>
                <div class="sub">
                    <a class="creator" href=/user/@post.Creator.UserName>@post.Creator.UserName</a> | @post.Created.ToString("dd / MM / yyyy") |
                    <a href='/post/@post.PostId'>@post.Comments.Count() comments</a>
                </div>
            </div>
        </div>

    </li>
    i++;
    }
</ul>
</div>

<div class="sidebar">
    <ul>
        <li>
            <a asp-controller="Home" asp-action="Submit" class="navbar-brand">Submit Link</a>
        </li>
        @if (Model.Item2.SubscribedUsers.Any(x => x.UserId == userManager.GetUserId(User)
            && x.Subscribed))
        {
            <li>
                <a id="subscribe" href="javascript:void" onclick="subreddit_unsubscribe('@Model.Item2.Name')" class="navbar-brand">
                    Unsubscribe
                </a>
            </li>
        }
        else
        {
            <li>
                <a id="subscribe" href="javascript:void" onclick="subreddit_subscribe('@Model.Item2.Name')" class="navbar-brand">
                    Subscribe
                </a>
            </li>
        }
    </ul>

    @{
        var count = Model.Item2.SubscribedUsers.Where(x => x.Subscribed).Count();
    }

    <div style="text-align:center">@count subscribers</div>
</div>
